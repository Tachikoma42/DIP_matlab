function newbuf=DctBlock(oldbuf,Block) 
    % ************************************************************************ 
    % 函数名称：         
    % DctBlock()      DCT n*n块频谱函数 
    %  
    % 参数： 
    %   oldbuf          原图像数组 
    %   Block           DCT n*n当前块选择值 
    %   newbuf          存放处理后的图像二维数组 
    %  
    % 说明： 
    %    根据 Block块的当前选择值，计算原图像的 n*n块 DCT变换，并转换为可视频谱图，
    
    %  有利于频谱的观察。         
            
    % ************************************************************************ 
    oldbuf=double(oldbuf);
    H=dctmtx(Block);
    newbuf=blkproc(oldbuf,[Block Block],'P1*x*P2',H,H');
    newbuf=log(abs(newbuf));
    subplot(2,2,2);
    imshow(newbuf,[]);
end
%-------------------------------------------------------------------------   
 
function newbuf=DctCode(oldbuf,DCTch) 
    % ************************************************************************ 
    % 函数名称：         
    %    DctCode()      DCT 8*8 块系数“Z”字扫描图像压缩函数 
    %  
    % 参数： 
    %   oldbuf         原图像数组 
    %   DCTch          DCT 8*8 块“Z”扫描当前系数选择值 
    %   newbuf         存放处理后的图像二维数组 
    %  
    % 说明： 
    %    计算图像的 8×8子块 DCT变换，按“Z”字扫描顺序，根据 DCTch参数，只保留 64个 
    % DCT系数中的前 DCTch个系数，对修改后的 DCT系数用逆 DCT变换重建图像，得到 DCT 
    % 变换的压缩图像。计算重建图像的均方根误差 RMSE ；显示误差图像和误差直方图。         
            
    % ************************************************************************ 
    zigzag=[
        1 2 6 7 15 16 28 29
        3 5 8 14 17 27 30 43         
        4 9 13 18 26 31 42 44         
        10 12 19 25 32 41 45 54         
        11 20 24 33 40 46 53 55         
        21 23 34 39 47 52 56 61         
        22 35 38 48 51 57 60 62         
        36 37 49 50 58 59 63 64
            ];%设置 Z 扫描顺序 
    tbuf=ones(8);%定义 8*8 全 1 数组 
    maskbuf=tbuf .* zigzag<=DCTch;%根据当前 DCTch值得到“Z”字扫描的二值掩模 
    oldbuf=double(oldbuf);
    H=dctmtx(8);
    dctno=blkproc(oldbuf,[8 8],'P1*x*P2',H,H');
    newbuf=blkproc(dctno,[8 8],'P1*(x.*P2)*P3',H',maskbuf,H);
    subplot(2,2,2);
    imshow(newbuf,[]);
    eimag(oldbuf,newbuf);
end
%------------------------------------------------------------------------- 
 
function newbuf=JpegCode(oldbuf) 
    % ************************************************************************ 
    % 函数名称：         
    %    JpegCode()       JPEG近似基准编码 
    %  
    % 参数： 
    %   oldbuf         原图像数组 
    %   newbuf         存放处理后的图像二维数组 
    %  
    % 说明：    
    %   实现 JPEG压缩编码，进行 8×8 子块 DCT变换、JPEG量化矩阵的量化与反量化，8×8  
    %子块 DCT的图像重建；计算重建图像的均方根误差 RMSE；显示误差图像和误差直方图。         
    % ************************************************************************ 
    z = [
        16 11 10 16 24 40 51 61         
        12 12 14 19 26 58 60 55         
        14 13 16 24 40 57 69 56         
        14 17 22 29 51 87 80 62         
        18 22 37 56 68 109 103 77         
        24 35 55 64 81 104 113 92         
        49 64 78 87 103 121 120 101         
        72 92 95 98 112 100 103 99
    ];  %标准亮度量化表        

    oldbuf=double(oldbuf);%原图像数据转换为双精度 
    H=dctmtx(8);
    dctno=blkproc(oldbuf,[8 8],'P1*x*P2',H,H');
    jpegno=blkproc(dctno,[8 8],'round(x./P1)',z);
    jpegno1=blkproc(jpegno,[8 8],'x.*P1',z);
    newbuf=blkproc(jpegno1,[8 8],'P1*x*P2',H',H);
    subplot(2,2,2);
    imshow(newbuf,[]);
    eimag(oldbuf,newbuf);
end
%------------------------------------------------------------------------- 
 
function eimag(oldbuf,newbuf) 
% ************************************************************************ 
% 函数名称：         
%    eimag()         
 
% 说明： 
%    计算重建图像的均方根误差 RMSE；显示误差图像和误差直方图。         
% ************************************************************************ 
    e=double(oldbuf)-newbuf;
    %计算原图像与压缩图像之差 
    [m,n]=size(e);
    RMSE=sqrt(sum(e(:).^2) / (m*n));        %计算均方根误差 
    if RMSE                                 %如果有误差，即 rmse不为 0     
        emax=max(abs(e(:)));                    %找图像差最大值     
        [h,x]=hist(e(:),emax);                  %用于生成直方图数据
    end 

    if length(h) >= 1                       %如果有数据
        s=max(h(:));
        subplot(2,2,3),bar(x,h/s,'k');          %显示图像差值直方图     
        RMSE=num2str(RMSE);                     %把数值转换为字符串     
        strRMSE=strcat('图像差值直方图  均方根误差RMSE= ',RMSE);%把多个串连接成长串 
        title(strRMSE);
        e=mat2gray(e,[-emax,emax]);             %显示差值图像     
        subplot(2,2,4);
        imshow(e);
        title('原图像与压缩图像的差值图像');        %显示结果图像标题     
    end 
end
%------------------------------------------------------------------------- 